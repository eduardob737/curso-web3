{
  "contractName": "FirstContract",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "functionOnlyOwnerCanCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"functionOnlyOwnerCanCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/FirstContract.sol\":\"FirstContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"project:/contracts/FirstContract.sol\":{\"keccak256\":\"0x15e3298c94b7ed5a9710ab8d5ea22aa9539282ddc640bb569f7619ce6eae5baa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d925e872cd7dc7544e921c91677a53b188122fe79a2f94ea4936d21cb8f8499\",\"dweb:/ipfs/QmWBhXHTPJJ3AmvRUbcCT6R3ysCDUmaZYDgB8Ca2F2fzJN\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610113806100326000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80633871cf0b1460415780638da5cb5b146049578063958f85bd146077575b600080fd5b60476087565b005b600054605b906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6000546001600160a01b0316605b565b6000546001600160a01b0316331460db5760405162461bcd60e51b815260206004820152601460248201527353656e646572206973206e6f74206f776e65722160601b604482015260640160405180910390fd5b56fea2646970667358221220b56e48a3b01272f0fb1c9e742f4757a6814138d46fdb3bcc46d6f9f1949572d664736f6c63430008130033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b5060043610603c5760003560e01c80633871cf0b1460415780638da5cb5b146049578063958f85bd146077575b600080fd5b60476087565b005b600054605b906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6000546001600160a01b0316605b565b6000546001600160a01b0316331460db5760405162461bcd60e51b815260206004820152601460248201527353656e646572206973206e6f74206f776e65722160601b604482015260640160405180910390fd5b56fea2646970667358221220b56e48a3b01272f0fb1c9e742f4757a6814138d46fdb3bcc46d6f9f1949572d664736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:568:4",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:4",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:4"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:4",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:4",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:4",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:4"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:4",
                "type": ""
              }
            ],
            "src": "14:203:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "396:170:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "413:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "424:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "406:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "406:21:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "406:21:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "447:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "458:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "443:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "443:18:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "463:2:4",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "436:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "436:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "436:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "486:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "497:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "482:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "482:18:4"
                      },
                      {
                        "hexValue": "53656e646572206973206e6f74206f776e657221",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "502:22:4",
                        "type": "",
                        "value": "Sender is not owner!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "475:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "475:50:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "475:50:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "534:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "546:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "557:2:4",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "542:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "542:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "534:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ea0f1c67920ede289df98c7c46820ae8a8b5639515da83d7677114ffc4e157a5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "373:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "387:4:4",
                "type": ""
              }
            ],
            "src": "222:344:4"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_ea0f1c67920ede289df98c7c46820ae8a8b5639515da83d7677114ffc4e157a5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Sender is not owner!\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "115:647:2:-:0;;;187:48;;;;;;;;;-1:-1:-1;209:5:2;:18;;-1:-1:-1;;;;;;209:18:2;217:10;209:18;;;115:647;;;;;;",
  "deployedSourceMap": "115:647:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;450:66;;;:::i;:::-;;146:20;;;;;-1:-1:-1;;;;;146:20:2;;;;;;-1:-1:-1;;;;;178:32:4;;;160:51;;148:2;133:18;146:20:2;;;;;;;355:87;398:7;429:5;-1:-1:-1;;;;;429:5:2;355:87;;450:66;299:5;;-1:-1:-1;;;;;299:5:2;285:10;:19;277:52;;;;-1:-1:-1;;;277:52:2;;424:2:4;277:52:2;;;406:21:4;463:2;443:18;;;436:30;-1:-1:-1;;;482:18:4;;;475:50;542:18;;277:52:2;;;;;;;;450:66::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.19;\r\n\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\n\r\ncontract FirstContract{\r\n\r\n    address public owner;\r\n            \r\n    constructor(){\r\n      owner = msg.sender;\r\n    }\r\n    \r\n    modifier _ownerOnly(){\r\n      require(msg.sender == owner, \"Sender is not owner!\");\r\n      _;\r\n    }\r\n\r\n    function getContract() public view returns(address) {\r\n            return owner;\r\n    }\r\n\r\n    function functionOnlyOwnerCanCall() public _ownerOnly {    \r\n    }\r\n\r\n    /*function changePrice (uint newPrice) public _ownerOnly returns (string memory message) {\r\n        price = newPrice;\r\n        message = string.concat(\"Novo preco alterado: \", Strings.toString(price));\r\n        return message;\r\n    }*/\r\n}",
  "sourcePath": "C:\\Users\\edubarbosa\\Desktop\\Curso web3\\curso-web3\\contracts\\FirstContract.sol",
  "ast": {
    "absolutePath": "project:/contracts/FirstContract.sol",
    "exportedSymbols": {
      "FirstContract": [
        1080
      ],
      "Math": [
        1039
      ],
      "Strings": [
        174
      ]
    },
    "id": 1081,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1041,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "id": 1042,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1081,
        "sourceUnit": 175,
        "src": "60:51:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "FirstContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1080,
        "linearizedBaseContracts": [
          1080
        ],
        "name": "FirstContract",
        "nameLocation": "124:13:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 1044,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "161:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 1080,
            "src": "146:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1043,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "146:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1052,
              "nodeType": "Block",
              "src": "200:35:2",
              "statements": [
                {
                  "expression": {
                    "id": 1050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1047,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1044,
                      "src": "209:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1048,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "217:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "221:6:2",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "217:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "209:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1051,
                  "nodeType": "ExpressionStatement",
                  "src": "209:18:2"
                }
              ]
            },
            "id": 1053,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "198:2:2"
            },
            "returnParameters": {
              "id": 1046,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "200:0:2"
            },
            "scope": 1080,
            "src": "187:48:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1064,
              "nodeType": "Block",
              "src": "268:79:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1056,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "285:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "289:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "285:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1058,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1044,
                          "src": "299:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "285:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206973206e6f74206f776e657221",
                        "id": 1060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "306:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea0f1c67920ede289df98c7c46820ae8a8b5639515da83d7677114ffc4e157a5",
                          "typeString": "literal_string \"Sender is not owner!\""
                        },
                        "value": "Sender is not owner!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea0f1c67920ede289df98c7c46820ae8a8b5639515da83d7677114ffc4e157a5",
                          "typeString": "literal_string \"Sender is not owner!\""
                        }
                      ],
                      "id": 1055,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "277:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "277:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1062,
                  "nodeType": "ExpressionStatement",
                  "src": "277:52:2"
                },
                {
                  "id": 1063,
                  "nodeType": "PlaceholderStatement",
                  "src": "338:1:2"
                }
              ]
            },
            "id": 1065,
            "name": "_ownerOnly",
            "nameLocation": "256:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "266:2:2"
            },
            "src": "247:100:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1072,
              "nodeType": "Block",
              "src": "407:35:2",
              "statements": [
                {
                  "expression": {
                    "id": 1070,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1044,
                    "src": "429:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1069,
                  "id": 1071,
                  "nodeType": "Return",
                  "src": "422:12:2"
                }
              ]
            },
            "functionSelector": "958f85bd",
            "id": 1073,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContract",
            "nameLocation": "364:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "375:2:2"
            },
            "returnParameters": {
              "id": 1069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1068,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1073,
                  "src": "398:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "398:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "397:9:2"
            },
            "scope": 1080,
            "src": "355:87:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1078,
              "nodeType": "Block",
              "src": "504:12:2",
              "statements": []
            },
            "functionSelector": "3871cf0b",
            "id": 1079,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1076,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1075,
                  "name": "_ownerOnly",
                  "nameLocations": [
                    "493:10:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1065,
                  "src": "493:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "493:10:2"
              }
            ],
            "name": "functionOnlyOwnerCanCall",
            "nameLocation": "459:24:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "483:2:2"
            },
            "returnParameters": {
              "id": 1077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "504:0:2"
            },
            "scope": 1080,
            "src": "450:66:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1081,
        "src": "115:647:2",
        "usedErrors": []
      }
    ],
    "src": "33:729:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-03-17T15:15:35.903Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}